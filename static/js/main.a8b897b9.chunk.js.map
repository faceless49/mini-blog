{"version":3,"sources":["components/Post.tsx","api/api.tsx","redux/reducers/posts-reducer.tsx","redux/store.tsx","redux/reducers/comments-reducer.tsx","components/Posts.tsx","components/Comments.tsx","pages/Home.tsx","components/Header.tsx","pages/FullPost.tsx","App.tsx","index.tsx"],"names":["Post","id","imageUrl","title","text","onRemove","Card","style","marginBottom","CardMedia","component","alt","height","image","CardContent","Typography","gutterBottom","variant","color","CardActions","to","Button","size","onClick","instance","axios","create","baseURL","postsApi","get","post","delete","initState","posts","rootReducer","combineReducers","state","action","type","filter","obj","map","p","comments","store","createStore","applyMiddleware","thunk","useAppSelector","useSelector","window","Posts","Grid","item","xs","i","Comments","List","sx","width","maxWidth","bgcolor","ListItem","alignItems","ListItemAvatar","Avatar","src","ListItemText","primary","secondary","display","Divider","Home","dispatch","useDispatch","useEffect","then","res","data","className","container","spacing","removePostAC","removePostTC","Search","styled","theme","position","marginRight","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","breakpoints","up","SearchIconWrapper","padding","pointerEvents","justifyContent","StyledInputBase","InputBase","paddingLeft","transition","transitions","Header","onAddPost","Box","flexGrow","AppBar","Toolbar","IconButton","edge","aria-label","mr","noWrap","sm","textDecoration","placeholder","inputProps","FullPost","useParams","find","Paper","marginTop","TextField","multiline","fullWidth","App","addPostAC","Container","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAiBaA,EAAO,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,GAAIC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,SAChD,OACE,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,aAAc,IAA7B,UACE,cAACC,EAAA,EAAD,CACEC,UAAU,MACVC,IAAI,eACJC,OAAO,MACPC,MAAOX,IAET,eAACY,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKP,UAAU,MAAhD,SACGP,IAEH,cAACY,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,iBAAlC,SACGd,OAGL,eAACe,EAAA,EAAD,WACE,cAAC,IAAD,CAAMC,GAAE,gBAAWnB,GAAnB,SACE,cAACoB,EAAA,EAAD,CAAQC,KAAK,QAAb,gEAGF,cAACD,EAAA,EAAD,CAAQE,QAAS,kBAAMlB,EAASJ,IAAKqB,KAAK,QAAQJ,MAAM,QAAxD,+D,iCCpCFM,E,OAAWC,EAAMC,OAAO,CAC5BC,QAAS,iDAKEC,EAAW,WAEpB,OAAOJ,EAASK,IAAqB,UAF5BD,EAAW,WAKpB,OAAOJ,EAASM,KAAe,UALtBF,EAAW,SAOX3B,GACT,OAAOuB,EAASO,OAAT,gBAAyB9B,KCZ9B+B,EAA4B,CAChCC,MAAO,IA0BF,I,SC1BDC,EAAcC,YAAgB,CAClCF,MDEK,WAGY,IAFjBG,EAEgB,uDAFRJ,EACRK,EACgB,uCAChB,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,2BACFF,GADL,IAEEH,MAAM,GAAD,mBAAMG,EAAMH,OAAZ,CAAmBI,EAAOP,SAEnC,IAAK,cACH,OAAO,2BACFM,GADL,IAEEH,MAAOG,EAAMH,MAAMM,QAAO,SAACC,GAAD,OAAmBA,EAAIvC,KAAOoC,EAAOpC,QAEnE,IAAK,YACH,MAAO,CAAEgC,MAAOI,EAAOJ,MAAMQ,KAAI,SAACC,GAAD,sBAAaA,OAChD,QACE,OAAON,ICnBXO,SCJ6B,WAC7B,OAAO,2BDMIC,EAAQC,YAAYX,EAAaY,YAAgBC,MAEjDC,EACXC,IAGFC,OAAON,MAAQA,EEPR,IAAMO,EAAuB,SAAC,GAAkB,IAAhB9C,EAAe,EAAfA,SAC/B4B,EAAQe,GAAgC,SAACZ,GAAD,OAAWA,EAAMH,MAAMA,SAErE,OACE,cAACmB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACGrB,EAAMQ,KAAI,SAACD,EAAKe,GAAN,OACT,cAAC,EAAD,2BAAkBf,GAAlB,IAAuBnC,SAAUA,IAAtBkD,S,sDCNNC,EAAW,WACtB,OACE,eAACC,EAAA,EAAD,CAAMC,GAAI,CAAEC,MAAO,OAAQC,SAAU,IAAKC,QAAS,oBAAnD,UACE,eAACC,EAAA,EAAD,CAAUC,WAAW,aAArB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEtD,IAAI,aACJuD,IAAI,iDAGR,cAACC,EAAA,EAAD,CACEC,QAAQ,uBACRC,UACE,qCACE,cAACtD,EAAA,EAAD,CACE2C,GAAI,CAAEY,QAAS,UACf5D,UAAU,OACVO,QAAQ,QACRC,MAAM,eAJR,yBAQC,wEAKT,cAACqD,EAAA,EAAD,CAAStD,QAAQ,QAAQP,UAAU,OACnC,eAACoD,EAAA,EAAD,CAAUC,WAAW,aAArB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEtD,IAAI,gBACJuD,IAAI,iDAGR,cAACC,EAAA,EAAD,CACEC,QAAQ,aACRC,UACE,qCACE,cAACtD,EAAA,EAAD,CACE2C,GAAI,CAAEY,QAAS,UACf5D,UAAU,OACVO,QAAQ,QACRC,MAAM,eAJR,sCAQC,oEAKT,cAACqD,EAAA,EAAD,CAAStD,QAAQ,QAAQP,UAAU,OACnC,eAACoD,EAAA,EAAD,CAAUC,WAAW,aAArB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEtD,IAAI,cACJuD,IAAI,iDAGR,cAACC,EAAA,EAAD,CACEC,QAAQ,UACRC,UACE,qCACE,cAACtD,EAAA,EAAD,CACE2C,GAAI,CAAEY,QAAS,UACf5D,UAAU,OACVO,QAAQ,QACRC,MAAM,eAJR,0BAQC,6EC3EFsD,EAAgB,WAC3B,IAAMC,EAAWC,cAUjB,OAJAC,qBAAU,WACRF,GLmCyC,SAACA,GAC5C7C,IAAoBgD,MAAK,SAACC,GACxBJ,EAjBD,CAAEnC,KAAM,YAAaL,MAiBA4C,EAAIC,eKpCvB,IAGD,eAAC1B,EAAA,EAAD,CAAM2B,UAAU,UAAUC,WAAS,EAACC,QAAS,EAA7C,UACE,cAAC,EAAD,CAAO5E,SAVQ,SAACJ,GAClBwE,EL8CF,SAACxE,GAAD,OACA,SAACwE,GACC7C,EAAoB3B,GAAI2E,MAAK,SAACC,GAC5BJ,EA5BsB,SAACxE,GAAD,MACzB,CAAEqC,KAAM,cAAerC,MA2BXiF,CAAajF,QKjDfkF,CAAalF,OAUpB,cAACmD,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,U,+GCTF8B,GAASC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,oBAC3BC,SAAU,WACVC,YAAa,GACbC,aAAcH,EAAMI,MAAMD,aAC1BE,gBAAiBC,YAAMN,EAAMO,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACTJ,gBAAiBC,YAAMN,EAAMO,QAAQC,OAAOC,MAAO,MAErDC,WAAY,EACZrC,MAAO,QACN2B,EAAMW,YAAYC,GAAG,MAAQ,CAC5BF,WAAYV,EAAML,QAAQ,GAC1BtB,MAAO,YAILwC,GAAoBd,YAAO,MAAPA,EAAc,kBAAgB,CACtDe,QADsC,EAAGd,MAC1BL,QAAQ,EAAG,GAC1BrE,OAAQ,OACR2E,SAAU,WACVc,cAAe,OACf/B,QAAS,OACTP,WAAY,SACZuC,eAAgB,aAGZC,GAAkBlB,YAAOmB,IAAPnB,EAAkB,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CACxDpE,MAAO,UACP,wBAAwB,aACtBkF,QAASd,EAAML,QAAQ,EAAG,EAAG,EAAG,GAEhCwB,YAAY,cAAD,OAAgBnB,EAAML,QAAQ,GAA9B,KACXyB,WAAYpB,EAAMqB,YAAYjF,OAAO,SACrCiC,MAAO,QACN2B,EAAMW,YAAYC,GAAG,MAAQ,CAC5BvC,MAAO,OACP,UAAW,CACTA,MAAO,cASFiD,GAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,UACvB,OACE,cAACC,EAAA,EAAD,CAAKpD,GAAI,CAAEqD,SAAU,GAArB,SACE,cAACC,EAAA,EAAD,CAAQzB,SAAS,SAAjB,SACE,eAAC0B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACE5F,KAAK,QACL6F,KAAK,QACLjG,MAAM,UACNkG,aAAW,cACX1D,GAAI,CAAE2D,GAAI,GALZ,SAOE,cAAC,IAAD,MAEF,cAACtG,EAAA,EAAD,CACEE,QAAQ,KACRqG,QAAM,EACN5G,UAAU,MACVgD,GAAI,CAAEqD,SAAU,EAAGzC,QAAS,CAAEhB,GAAI,OAAQiE,GAAI,UAJhD,SAME,cAAC,IAAD,CAAMnG,GAAG,IAAT,SACE,sBAAMb,MAAO,CAAEW,MAAO,QAASsG,eAAgB,QAA/C,4BAKJ,eAAC,GAAD,WACE,cAACrB,GAAD,UACE,cAAC,IAAD,MAEF,cAACI,GAAD,CACEkB,YAAY,eACZC,WAAY,CAAE,aAAc,eAGhC,cAACrG,EAAA,EAAD,CAAQE,QAASsF,EAAW3F,MAAM,UAAUD,QAAQ,YAApD,2G,oBCpFG0G,GAAW,WAAO,IACrB1H,EAAO2H,cAAP3H,GAEF6B,EAAOkB,GACX,SAACZ,GAAD,OAAWA,EAAMH,MAAMA,MAAM4F,MAAK,SAACrF,GAAD,OAASA,EAAIvC,KAAOA,QAGxD,OACE,eAAC6H,GAAA,EAAD,CAAOvH,MAAO,CAAE6F,QAAS,YAAa2B,UAAW,IAAjD,UACE,6BAAKjG,EAAK3B,QACV,qBAAKI,MAAO,CAAEoD,MAAO,OAAQ/C,OAAQ,KAAOsD,IAAKpC,EAAK5B,SAAUS,IAAI,KACpE,4BACE,+BAAOmB,EAAK1B,SAEd,cAACmE,EAAA,EAAD,IACA,uGACA,cAAC,EAAD,IACA,cAACA,EAAA,EAAD,IACA,qJACA,cAACyD,GAAA,EAAD,CAAWC,WAAS,EAACR,YAAY,+IAA4BS,WAAS,IACtE,uBACA,uBACA,cAAC7G,EAAA,EAAD,CAAQH,MAAM,UAAUD,QAAQ,YAAYK,KAAK,QAAjD,kECJS6G,OAnBf,WACE,IAAM1D,EAAWC,cAKjB,OACE,sBAAKK,UAAU,MAAf,UACE,cAAC,GAAD,CAAQ8B,UANI,WACdpC,GR+BsC,SAACA,GACzC7C,IAAsBgD,MAAK,SAACC,GAC1B,IAAI/C,EAAO+C,EAAIC,KACfL,EAVqB,SAAC3C,GAAD,MACtB,CAAEQ,KAAM,WAAYR,QASVsG,CAAUtG,aQ5BjB,cAACuG,EAAA,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,eCd3CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAU9F,MAAOA,EAAjB,SACE,cAAC,GAAD,UAIN+F,SAASC,eAAe,W","file":"static/js/main.a8b897b9.chunk.js","sourcesContent":["import Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\n\ntype PropsType = {\n  id: string;\n  imageUrl: string;\n  title: string;\n  text: string;\n  onRemove: (id: string) => void;\n};\n\nexport const Post = ({ id, imageUrl, title, text, onRemove }: PropsType) => {\n  return (\n    <Card style={{ marginBottom: 30 }}>\n      <CardMedia\n        component=\"img\"\n        alt=\"green iguana\"\n        height=\"140\"\n        image={imageUrl}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {text}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Link to={`/post/${id}`}>\n          <Button size=\"small\">Просмотр</Button>\n        </Link>\n\n        <Button onClick={() => onRemove(id)} size=\"small\" color=\"error\">\n          Удалить\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n","import axios from \"axios\";\nimport { PostType } from \"../types/types\";\n\nconst instance = axios.create({\n  baseURL: \"https://617826619c328300175f5e53.mockapi.io/\",\n});\n\n// api\n\nexport const postsApi = {\n  getPosts() {\n    return instance.get<Array<PostType>>(\"posts\");\n  },\n  createPost() {\n    return instance.post<PostType>(\"posts\");\n  },\n  removePost(id: string) {\n    return instance.delete(`posts/${id}`);\n  },\n};\n","import { PostType } from \"../../types/types\";\nimport { AppRootStateType } from \"../store\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { postsApi } from \"../../api/api\";\n\nconst initState: PostsStateType = {\n  posts: [],\n};\n\nexport function postsReducer(\n  state = initState,\n  action: ActionsType\n): PostsStateType {\n  switch (action.type) {\n    case \"ADD-POST\":\n      return {\n        ...state,\n        posts: [...state.posts, action.post],\n      };\n    case \"REMOVE_POST\":\n      return {\n        ...state,\n        posts: state.posts.filter((obj: PostType) => obj.id !== action.id),\n      };\n    case \"SET-POSTS\":\n      return { posts: action.posts.map((p) => ({ ...p })) };\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport const removePostAC = (id: string) =>\n  ({ type: \"REMOVE_POST\", id } as const);\nexport const setPostsAC = (posts: Array<PostType>) =>\n  ({ type: \"SET-POSTS\", posts } as const);\nexport const addPostAC = (post: PostType) =>\n  ({ type: \"ADD-POST\", post } as const);\n\n// Thunks\n\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>;\n\nexport const addPostTC = (): ThunkType => (dispatch) => {\n  postsApi.createPost().then((res) => {\n    let post = res.data;\n    dispatch(addPostAC(post));\n  });\n};\n\nexport const fetchPostsTC = (): ThunkType => (dispatch) => {\n  postsApi.getPosts().then((res) => {\n    dispatch(setPostsAC(res.data));\n  });\n};\n\nexport const removePostTC =\n  (id: string): ThunkType =>\n  (dispatch) => {\n    postsApi.removePost(id).then((res) => {\n      dispatch(removePostAC(id));\n    });\n  };\n\ntype ActionsType =\n  | ReturnType<typeof addPostAC>\n  | ReturnType<typeof removePostAC>\n  | ReturnType<typeof setPostsAC>;\ntype PostsStateType = {\n  posts: Array<PostType>;\n};\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { postsReducer } from \"./reducers/posts-reducer\";\nimport { commentsReducer } from \"./reducers/comments-reducer\";\nimport thunk from \"redux-thunk\";\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  comments: commentsReducer,\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\nexport const useAppSelector: TypedUseSelectorHook<AppRootStateType> =\n  useSelector;\n\n// @ts-ignore\nwindow.store = store;\n","import { CommentsType } from \"../../types/types\";\n\nconst initState: CommentsType = [];\n\nexport const commentsReducer = (state = initState, action: any) => {\n  return <div></div>;\n};\n","import { Grid } from \"@mui/material\";\nimport React, { FC } from \"react\";\nimport { PostType } from \"../types/types\";\nimport { Post } from \"./Post\";\nimport { useAppSelector } from \"../redux/store\";\n\ntype PropsType = {\n  onRemove: (id: string) => void;\n};\n\nexport const Posts: FC<PropsType> = ({ onRemove }) => {\n  const posts = useAppSelector<Array<PostType>>((state) => state.posts.posts);\n\n  return (\n    <Grid item xs={7}>\n      {posts.map((obj, i) => (\n        <Post key={i} {...obj} onRemove={onRemove} />\n      ))}\n    </Grid>\n  );\n};\n","import List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Typography from \"@mui/material/Typography\";\n\nimport React from \"react\";\n\nexport const Comments = () => {\n  return (\n    <List sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}>\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar\n            alt=\"Remy Sharp\"\n            src=\"https://mui.com/static/images/avatar/1.jpg\"\n          />\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"Brunch this weekend?\"\n          secondary={\n            <>\n              <Typography\n                sx={{ display: \"inline\" }}\n                component=\"span\"\n                variant=\"body2\"\n                color=\"text.primary\"\n              >\n                Ali Connors\n              </Typography>\n              {\" — I'll be in your neighborhood doing errands this…\"}\n            </>\n          }\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar\n            alt=\"Travis Howard\"\n            src=\"https://mui.com/static/images/avatar/2.jpg\"\n          />\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"Summer BBQ\"\n          secondary={\n            <>\n              <Typography\n                sx={{ display: \"inline\" }}\n                component=\"span\"\n                variant=\"body2\"\n                color=\"text.primary\"\n              >\n                to Scott, Alex, Jennifer\n              </Typography>\n              {\" — Wish I could come, but I'm out of town this…\"}\n            </>\n          }\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar\n            alt=\"Cindy Baker\"\n            src=\"https://mui.com/static/images/avatar/3.jpg\"\n          />\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"Oui Oui\"\n          secondary={\n            <>\n              <Typography\n                sx={{ display: \"inline\" }}\n                component=\"span\"\n                variant=\"body2\"\n                color=\"text.primary\"\n              >\n                Sandra Adams\n              </Typography>\n              {\" — Do you have Paris recommendations? Have you ever…\"}\n            </>\n          }\n        />\n      </ListItem>\n    </List>\n  );\n};\n","import { Grid } from \"@mui/material\";\nimport { Posts } from \"../components/Posts\";\nimport { Comments } from \"../components/Comments\";\nimport React, { FC, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchPostsTC, removePostTC } from \"../redux/reducers/posts-reducer\";\n\nexport const Home: FC<any> = () => {\n  const dispatch = useDispatch();\n\n  const removePost = (id: string) => {\n    dispatch(removePostTC(id));\n  };\n\n  useEffect(() => {\n    dispatch(fetchPostsTC());\n  }, []);\n\n  return (\n    <Grid className=\"wrapper\" container spacing={2}>\n      <Posts onRemove={removePost} />\n      <Grid item xs={5}>\n        <Comments />\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputBase from \"@mui/material/InputBase\";\nimport Typography from \"@mui/material/Typography\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  marginRight: 20,\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\ntype PropsType = {\n  onAddPost: () => void;\n};\nexport const Header = ({ onAddPost }: PropsType) => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\n          >\n            <Link to=\"/\">\n              <span style={{ color: \"white\", textDecoration: \"none\" }}>\n                React Blog\n              </span>\n            </Link>\n          </Typography>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </Search>\n          <Button onClick={onAddPost} color=\"success\" variant=\"contained\">\n            Добавить статью\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n","import Divider from \"@mui/material/Divider\";\nimport Button from \"@mui/material/Button\";\nimport Paper from \"@mui/material/Paper\";\nimport TextField from \"@mui/material/TextField\";\nimport { Comments } from \"../components/Comments\";\nimport React from \"react\";\nimport { useAppSelector } from \"../redux/store\";\nimport { PostType } from \"../types/types\";\nimport { useParams } from \"react-router-dom\";\n\nexport const FullPost = () => {\n  const { id } = useParams();\n\n  const post = useAppSelector<PostType>(\n    (state) => state.posts.posts.find((obj) => obj.id === id) as PostType\n  );\n\n  return (\n    <Paper style={{ padding: \"40px 60px\", marginTop: 30 }}>\n      <h1>{post.title}</h1>\n      <img style={{ width: \"100%\", height: 400 }} src={post.imageUrl} alt=\"\" />\n      <p>\n        <span>{post.text}</span>\n      </p>\n      <Divider />\n      <h3>Комментарии(0)</h3>\n      <Comments />\n      <Divider />\n      <h3>Добавить комментарий</h3>\n      <TextField multiline placeholder=\"Введите текст комментария\" fullWidth />\n      <br />\n      <br />\n      <Button color=\"success\" variant=\"contained\" size=\"large\">\n        Добавить\n      </Button>\n    </Paper>\n  );\n};\n","import React from \"react\";\nimport { Container } from \"@mui/material\";\nimport { Home } from \"./pages/Home\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { useDispatch } from \"react-redux\";\nimport { addPostTC } from \"./redux/reducers/posts-reducer\";\nimport { FullPost } from \"./pages/FullPost\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const addPost = () => {\n    dispatch(addPostTC());\n  };\n\n  return (\n    <div className=\"App\">\n      <Header onAddPost={addPost} />\n      <Container>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/post/:id\" element={<FullPost />} />\n        </Routes>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}